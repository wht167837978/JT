<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!--1.配置包扫描-->
    <context:component-scan base-package="com.jt.sso"/>
    <!--2.1 引入propertoes-->
    <context:property-placeholder location="classpath:/*.properties"/>
    <!--2.2 配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- 3.配置事务控制-->
    <tx:annotation-driven/>
    <!--    3.1定义事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--    3.2定义事务策略
    propagation="REQUIRED" 默认的 必须添加事务
    propagation="SUPPORTS" 事务支持，原有事务则添加事务，原有操作没有事务则不添加事务
    propagation="NEVER" 从不添加事务
    propagation="REQUIRES_NEW 都会创建一个新的事务
    read-only="true" 该操作只读
    -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
<!--    3。3定义事务切面-->
    <aop:config>
        <aop:pointcut id="pc" expression="execution(* com.jt.sso.service..*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
    </aop:config>


<!--    &lt;!&ndash;spring整合mybaits-->
    <!--       1.配置数据源-->
    <!--       2。导入mybatis自身配置文件-->
    <!--       3。导入映射文件-->
    <!--       4。配置别名包&ndash;&gt;-->
    <!--       <bean class="org.mybatis.spring.SqlSessionFactoryBean">-->
    <!--        <property name="dataSource" ref="dataSource"/>-->
    <!--        <property name="configLocation" value="classpath:/mybatis-config.xml"/>-->
    <!--        <property name="mapperLocations" value="classpath:/Mappers/*.xml"/>-->
    <!--        <property name="typeAliasesPackage" value="com.jt.manage.pojo"/>-->
    <!--    </bean>-->
    <!--    &lt;!&ndash;    spring 为Mapper接口创建代理对象&ndash;&gt;-->
    <!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
    <!--        <property name="basePackage" value="com.jt.manage.mapper"/>-->
    <!--    </bean>-->

</beans>